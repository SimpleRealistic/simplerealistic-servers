#include <sourcemod>
#include <sdktools>

public Plugin:myinfo =
{
	name = "SendFile Exploit Fix (v3.1)",
	author = "backwards",
	description = "Prevents Clients From Exploiting The Un-Patched SRCDS SendFile Command, V3 Adds ReceiveFile Support.)",
	version = "3.1",
	url = "http://www.steamcommunity.com/id/mypassword"
}

#define MAX_FILES_ALLOWED_WHILE_ACTIVE_PER_MAP 256
#define MAX_FILES_ALLOWED_UPLOAD 32

bool InLevel[MAXPLAYERS+1] = {false, ...};
int RequestCount[MAXPLAYERS+1] = {0, ...};
int SendCount[MAXPLAYERS+1] = {0, ...};

public OnPluginStart()
{
	CreateTimer(5.0, DecrementThread, _, TIMER_REPEAT);
	
	if (GetEngineVersion() != Engine_CSGO)
		return;
		
	new Address:addy = GameConfGetAddress(LoadGameConfigFile("SendFileExploitFix_csgo_1_2_2021"), "CheckReceivingList");

	new OS = LoadFromAddress(addy + Address:1, NumberType_Int8);
	switch(OS)
	{
		case 0x89: //Linux
		{
			for(int i = 0;i<5;i++)
				StoreToAddress((addy + Address:0x3B9 + view_as<Address>(i)), 0x90, NumberType_Int8);
		}
		case 0x8B: //Windows
		{
			for(int i = 0;i<2;i++)
				StoreToAddress((addy + Address:0x270 + view_as<Address>(i)), 0x90, NumberType_Int8);
		}
		default:
		{
			SetFailState("CheckReceivingList Signature Incorrect. (0x%.2x)", OS);
		}
	}
}

public Action:DecrementThread(Handle:timer, any:unused)
{
	for (new client = 0; client <= MaxClients; client++)
	{
		RequestCount[client] -= 32;
		if(RequestCount[client] < 0)
			RequestCount[client] = 0;
	}
	
	return Plugin_Continue;
}

public OnMapStart()
{
	for (new client = 1; client <= MaxClients; client++)
	{
		if(IsClientConnected(client))
		{
			if(IsClientInGame(client))
			{
				InLevel[client] = true;
				RequestCount[client] = 0;
				SendCount[client] = 0;
			}
		}
	}
}

public OnMapEnd()
{
	for (new client = 1; client <= MaxClients; client++)
	{
		InLevel[client] = false;
		RequestCount[client] = 0;
		SendCount[client] = 0;
	}
}

public OnClientPutInServer(client)
{
	InLevel[client] = true;
	RequestCount[client] = 0;
	SendCount[client] = 0;
}

public OnClientDisconnect(client)
{
	RequestCount[client] = 0;
	SendCount[client] = 0;
}

public Action OnFileSend(int client, const char[] sFile)
{
	if(InLevel[client])
	{
		RequestCount[client]++;
		if(RequestCount[client] > MAX_FILES_ALLOWED_WHILE_ACTIVE_PER_MAP)
		{
			if(!IsClientInKickQueue(client))
				KickClient(client, "ServerCrashExploitAttempt.");
				
			return Plugin_Stop;
		}
	}
	
	return Plugin_Continue;
}

public Action OnFileReceive(int client, const char[] sFile)
{
	SendCount[client]++;
	
	if(SendCount[client] > MAX_FILES_ALLOWED_UPLOAD)
	{
		if(!IsClientInKickQueue(client))
			KickClient(client, "ServerCrashExploitAttempt.");
	}
}